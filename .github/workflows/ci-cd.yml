deploy:
  needs: build
  runs-on: ubuntu-latest

  steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        name: app-jar
        path: .

    - name: Show downloaded files (debug)
      run: |
        pwd
        ls -al

    - name: Normalize jar name to app.jar
      run: |
        # 워크스페이스에 있는 첫 번째 jar를 app.jar로 통일
        JAR=$(ls -1 *.jar | head -n1)
        if [ -z "$JAR" ]; then
          echo "No JAR found!"
          exit 1
        fi
        echo "Found JAR: $JAR"
        mv -f "$JAR" app.jar
        ls -al app.jar

    - name: Prepare application-prod.yml (placeholder)
      run: |
        cat > application-prod.yml << 'EOF'
        # 운영 환경 설정 (지금은 비워둠)
        # spring:
        #   datasource:
        #     url: ${DB_URL}
        #     username: ${DB_USERNAME}
        #     password: ${DB_PASSWORD}
        # jwt:
        #   secret: ${JWT_SECRET}
        EOF
        ls -al application-prod.yml

    - name: Copy to server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        source: |
          app.jar
          application-prod.yml
        target: ${{ secrets.SERVER_APP_DIR }}
        overwrite: true
        debug: true

    - name: Restart service
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          set -e
          cd ${{ secrets.SERVER_APP_DIR }}
          sudo systemctl restart ${{ secrets.SERVER_SERVICE }}
          sudo systemctl status  ${{ secrets.SERVER_SERVICE }} --no-pager -l
